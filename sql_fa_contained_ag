/*
THIS SAMPLE CODE AND ANY RELATED INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS 
FOR A PARTICULAR PURPOSE. 

We grant You a nonexclusive, royalty-free right to use and modify the Sample Code and to reproduce and distribute 
the object code form of the Sample Code, provided that You agree: ?
(i) to not use Our name, logo, or trademarks to market Your software product in which the Sample Code is embedded; ?
(ii) to include a valid copyright notice on Your software product in which the Sample Code is embedded; and ?
(iii) to indemnify, hold harmless, and defend Us and Our suppliers from and against any claims or lawsuits, including attorneysâ€™ fees, 
that arise or result from the use or distribution of the Sample Code. ?
Please note: None of the conditions outlined in the disclaimer above will supersede the terms and conditions 
contained within the Premier Customer Services Description. ?
*/

-- run in sqlcmd mode
:Connect SQLN1\SQL2022
USE [master]
GO
DROP DATABASE IF EXISTS [ConAgDemo]
GO
CREATE DATABASE [ConAgDemo]
GO
BACKUP DATABASE [ConAgDemo] TO  DISK = N'NUL' WITH NOFORMAT, NOINIT,  NAME = N'ConAgDemo-Full Database Backup', SKIP, NOREWIND, NOUNLOAD,  STATS = 10
GO

:Connect SQLN1\SQL2022
--only if not already configured
USE [master]
GO

CREATE ENDPOINT [Hadr_endpoint] 
	AS TCP (LISTENER_PORT = 5022)
	FOR DATA_MIRRORING (ROLE = ALL, ENCRYPTION = REQUIRED ALGORITHM AES);
GO

IF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0
BEGIN
	ALTER ENDPOINT [Hadr_endpoint] STATE = STARTED;
END;
GO

GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [corpnet\sqlsvc];
GO

:Connect SQLN1\SQL2022
IF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')
BEGIN
  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);
END;

IF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')
BEGIN
  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;
END;
GO

:Connect SQLN2\SQL2022
--only if not already configured
USE [master];
GO

CREATE ENDPOINT [Hadr_endpoint] 
	AS TCP (LISTENER_PORT = 5022)
	FOR DATA_MIRRORING (ROLE = ALL, ENCRYPTION = REQUIRED ALGORITHM AES);
GO

IF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0
BEGIN
	ALTER ENDPOINT [Hadr_endpoint] STATE = STARTED;
END;
GO

GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [corpnet\sqlsvc];
GO

:Connect SQLN2\SQL2022
IF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')
BEGIN
  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);
END;

IF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')
BEGIN
  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;
END;
GO

:Connect SQLN1\SQL2022
USE [master]
GO

CREATE AVAILABILITY GROUP [conag1]
WITH (AUTOMATED_BACKUP_PREFERENCE = SECONDARY,
      DB_FAILOVER = ON,
      DTC_SUPPORT = NONE,
      REQUIRED_SYNCHRONIZED_SECONDARIES_TO_COMMIT = 0,
      CONTAINED,
	  REUSE_SYSTEM_DATABASES)
FOR DATABASE [ConAgDemo]
REPLICA ON N'SQLN1\SQL2022' WITH (ENDPOINT_URL = N'TCP://sqln1.corpnet.contoso.com:5022', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = SYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = NO)),
	       N'SQLN2\SQL2022' WITH (ENDPOINT_URL = N'TCP://sqln2.corpnet.contoso.com:5022', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = SYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = NO));

GO

:Connect SQLN1\SQL2022
USE [master]
GO

IF NOT EXISTS (SELECT * FROM sys.availability_group_listeners WHERE dns_name = 'conaglist1')
BEGIN
	ALTER AVAILABILITY GROUP [conag1]
	ADD LISTENER N'conaglist1' (WITH DHCP ON (N'192.168.1.0', N'255.255.255.0'), PORT=1433);
END;
GO

:Connect SQLN2\SQL2022
ALTER AVAILABILITY GROUP [conag1] JOIN;
GO

ALTER AVAILABILITY GROUP [conag1] GRANT CREATE ANY DATABASE;
GO
